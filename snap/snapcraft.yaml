name: kuwa-os
base: core22 # Since the core22 doesn't support the local plugin
version: '0.1.0' # just for humans, typically '1.2+git' or '1.3.2'
summary: An open, free, secure, and privacy-focused Generative-AI Operating System.
description: |
  Kuwa OS is an open, free, secure, and privacy-focused Generative-AI Operating
  System, including user-friendly WebUI for LLMs, and novel GenAI kernel to
  support AI-powered applications
license: MIT

grade: devel # must be 'stable' to release into candidate/stable channels
confinement: devmode # use 'strict' once you have the right plugs and slots

apps:
  # Reference: nextcloud-snap
  # Nginx daemon
  nginx:
    command: etc/init.d/nginx start
    stop-command: etc/init.d/nginx stop
    daemon: simple
    restart-condition: always
    plugs: [network, network-bind, removable-media]

  # PostgreSQL daemon
  mysql:
    command: etc/init.d/postgresql start
    stop-command: etc/init.d/postgresql stop
    daemon: simple
    restart-condition: always
    plugs: [network, network-bind]

  # PHP FPM daemon
  php-fpm:
    command: etc/init.d/php8.1-fpm start
    stop-command: etc/init.d/php8.1-fpm stop
    daemon: simple
    restart-condition: always
    plugs: [network, network-bind]

  # Redis server daemon
  redis-server:
    command: etc/init.d/redis-server start
    stop-command: etc/init.d/redis-server stop
    daemon: simple
    restart-condition: always
    plugs: [network, network-bind]
  
  # Redis worker daemon
  redis-worker:
    command: usr/bin/run-redis-workers
    daemon: simple
    restart-condition: always
    plugs: [network, network-bind]

  # PostgreSQL client
  psql:
    command: usr/bin/psql
    plugs: [network, network-bind]

  pg-dump:
    command: usr/bin/pg_dump
    plugs: [network, network-bind]

  # Web initializer
  init:
    command: usr/bin/init-web
    plugs: [network, network-bind]

package-repositories:
 - type: apt
   ppa: ondrej/php

# slots:
#   multi-chat:
#     interface: content
#     content: storage
#     write: 
#       - $SNAP/var/www/html/multi-chat

# plugs:
#   multi-chat:
#     interface: content
#     content: storage
#     target: $SNAP/var/www/html/multi-chat

parts:
  # Manually install Node.js
  # This part will not included in the snap.
  nodejs:
    plugin: nil
    override-build: |
      curl -fsSL https://deb.nodesource.com/setup_lts.x | sudo -E bash -
      apt-get install -y nodejs
      echo Version of Node.js: $(node -v)
      echo Version of NPM: $(npm -v)

  # Manually install Composer
  # This part will not included in the snap.
  composer:
    plugin: nil
    build-packages: [php8.1, php8.1-cli]
    override-build: |
      update-alternatives --set php /usr/bin/php8.1
      curl -s https://getcomposer.org/installer | php
      mv composer.phar /usr/local/bin/composer
      echo Version of Composer: $(composer --version)
  
  # # Build a portable PHP from source
  # # Reference: nextcloud-snap
  # php:
  #   plugin: autotools
  #   source: https://www.php.net/distributions/php-8.1.27.tar.gz
  #   source-type: tar
  #   source-checksum: sha256/9aa5d7a29389d799885d90740932697006d5d0f55d1def67678e0c14f6ab7b2d
  #   build-packages:
  #     - pkg-config
  #     - build-essential
  #     - autoconf
  #     - bison
  #     - re2c
  #     - libxml2-dev
  #     - libcurl4-openssl-dev
  #     - libpng-dev
  #     - libjpeg8-dev
  #     - libbz2-dev
  #     - libmcrypt-dev
  #     - libldap2-dev
  #     - libfreetype6-dev
  #     - libgmp-dev
  #     - libzip-dev
  #     - libargon2-0-dev
  #     - libsodium-dev

  #     # This is no longer bundled with PHP as of v7.4
  #     - libonig-dev
  #   stage-packages:
  #     - libasn1-8-heimdal
  #     - libcurl4
  #     - libfreetype6
  #     - libgssapi3-heimdal
  #     - libhcrypto4-heimdal
  #     - libheimbase1-heimdal
  #     - libheimntlm0-heimdal
  #     - libhx509-5-heimdal
  #     - libicu70
  #     - libjpeg8
  #     - libkrb5-26-heimdal
  #     - libldap-2.5-0
  #     - libnghttp2-14
  #     - libpng16-16
  #     - libpsl5
  #     - libroken18-heimdal
  #     - librtmp1
  #     - libsasl2-2
  #     - libwind0-heimdal
  #     - libxml2
  #     - libzip4
  #     - libargon2-0
  #     - libonig5
  #     - libsodium23
  #     - libssl-dev
  #   override-build: |
  #     ./configure --enable-fpm --disable-cgi --disable-phar --disable-phpdbg --disable-rpath\
  #       --enable-ctype --enable-mbstring --with-zip --with-zlib --with-bz2 --enable-gd --with-curl \
  #       --with-openssl --with-sodium --enable-exif --enable-intl --enable-pcntl --with-jpeg \
  #       --with-freetype --enable-bcmath --enable-sysvsem --with-gmp --with-password-argon2 \
  #       --without-sqlite3 --without-pdo-sqlite --with-pdo-pgsql --with-pgsql `# Use PGSQL as database`\
  #       --with-libdir=lib/${SNAPCRAFT_ARCH_TRIPLET} --with-ldap `# LDAP support`\
  #       --prefix=${CRAFT_PART_INSTALL}
  #     make -j${SNAP}
  #     make install 
    
  #   stage: ['*']
  php:
    plugin: nil
    source: snap/local/php
    
    override-build: |
      # Custom configuration and scripts
      mkdir -p ${CRAFT_PART_INSTALL}/etc/php/8.1/fpm/pool.d
      mkdir -p ${CRAFT_PART_INSTALL}/etc/php/8.1/cli
      mkdir -p ${CRAFT_PART_INSTALL}/usr/bin
      install -v -t ${CRAFT_PART_INSTALL}/etc/php/8.1/fpm/ php.ini
      install -v -t ${CRAFT_PART_INSTALL}/etc/php/8.1/cli/ php.ini
      install -v -T php-fpm-pool.conf ${CRAFT_PART_INSTALL}/etc/php/8.1/fpm/pool.d/www.conf 
      install -v -m 755 -t ${CRAFT_PART_INSTALL}/usr/bin/ php-snap
    
    stage: ['*']
    stage-packages: [
      php8.1, php8.1-cli, php8.1-fpm,
      php8.1-curl, php8.1-mbstring, php8.1-xml, php8.1-zip, php8.1-bz2,
      php8.1-ldap, php8.1-pgsql, php8.1-pdo-pgsql, php8.1-redis, php8.1-igbinary
    ]

    override-prime: |
      craftctl default
      
      function enable_all_module() {
        local install_path=$1
        mkdir -p ${install_path}
        pushd ${install_path} || return
        
        # Create symbolic link of all modules.
        rm -f *.ini
        ln -f -s ../../mods-available/*.ini .
        
        # Prepend the priority to the extension configuration files.
        for conf_file in *.ini; do
          # Get the priority value from the file
          priority=""
          : "${priority:=$(grep -oP '(?<=priority=)\d+' ${conf_file})}"
          : "${priority:=20}" # Default priority is 20
          
          # Rename the file with the prefix of priority
          mv ${conf_file} "${priority}-${conf_file}"
        done
        popd || retuen
      }

      # Copy the installed modules.
      # In the dpkg, this is done by the postinst script of each module.
      # However, in the snapcraft, the aforementioned script won't be executed.
      # Thus, we have to manually copy it.
      mkdir -p ${CRAFT_PRIME}/etc/php/8.1/mods-available
      find ${CRAFT_STAGE}/usr/share/ -iwholename "*php*.ini" \
        -not -path "*/php.ini" \
        -exec cp {} ${CRAFT_PRIME}/etc/php/8.1/mods-available \;

      # Fix the dependency issue of redis module.
      # The redis module should be loaded after the igbinary module.
      echo "; priority=30" >> ${CRAFT_PRIME}/etc/php/8.1/mods-available/redis.ini
      
      # Create enable all modules for both PHP-CLI and PHP-FPM
      enable_all_module ${CRAFT_PRIME}/etc/php/8.1/cli/conf.d/
      enable_all_module ${CRAFT_PRIME}/etc/php/8.1/fpm/conf.d/
  
  nginx:
    plugin: nil
    source: snap/local/nginx
    stage-packages: [nginx]
    override-build: |
      mkdir -p ${CRAFT_PART_INSTALL}/etc/nginx/sites-available
      mkdir -p ${CRAFT_PART_INSTALL}/etc/nginx/sites-enabled
      mkdir -p ${CRAFT_PART_INSTALL}/usr/bin
      install -v -T nginx_config ${CRAFT_PART_INSTALL}/etc/nginx/sites-available/multi-chat
      install -v -T nginx_config ${CRAFT_PART_INSTALL}/etc/nginx/sites-enabled/multi-chat
    stage: ['*']
  
  postgresql:
    plugin: nil
    stage-packages: [postgresql, postgresql-contrib]

  redis:
    plugin: nil
    stage-packages: [redis]
  
  multi-chat:
    source: multi-chat
    plugin: nil
    after: [nodejs, composer]
    build-packages: [
      php8.1, php8.1-cli,
      php8.1-curl, php8.1-mbstring, php8.1-xml, php8.1-zip, php8.1-ldap,
      php8.1-pgsql, php8.1-pdo-pgsql, php8.1-redis
    ] 
    override-build: |
      set -xeu
      
      update-alternatives --set php /usr/bin/php8.1
      sed -E -i 's/^;(extension=ldap)/\1/' /etc/php/8.1/cli/php.ini
      mv .env.dev .env 2>/dev/null || true
      
      # Optimize Laravel
      composer update
      php artisan key:generate --force
      pushd public &&
        rm -f storage &&
        ln -s ../storage storage &&
        popd # Reconstruct the symbolic link
      composer dump-autoload --optimize
      php artisan config:cache
      php artisan route:cache
      php artisan view:cache
      php artisan optimize
      
      # Build the front-end assets
      npm install
      npm run build

      # Install
      mkdir -p ${CRAFT_PART_INSTALL}/site/
      cp -rf * ${CRAFT_PART_INSTALL}/site/
      chown -R www-data:www-data ${CRAFT_PART_INSTALL}/site/
    
    organize:
      'site' : usr/share/multi-chat/site

    stage:
      - -README*
      - -usr/share/multi-chat/site/demo
      - -usr/share/multi-chat/site/executables

  multi-chat-script:
    source: snap/local/multi-chat
    after: [multi-chat]
    plugin: nil
    override-build: |
      mkdir -p ${CRAFT_PART_INSTALL}/usr/bin
      install -v -m 755 -t ${CRAFT_PART_INSTALL}/usr/bin/ run-redis-workers
      install -v -m 755 -t ${CRAFT_PART_INSTALL}/usr/bin/ init-web
    stage: ['*']